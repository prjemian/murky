name: CI

on:
  push:
    branches:
      - main   # push commit to the main branch
    tags:
      - '*'  # push tag to the main branch
  pull_request:
    branches:
      - main   # pull request to the main branch
  workflow_dispatch:   # allow manual triggering

defaults:
  run:
    shell: bash -l {0}

jobs:

  lint:
    name: Linting & Code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install package
        run: |
          set -vxeuo pipefail
          python -m pip install --upgrade pip
          pip install ruff
  
      - name: Run ruff
        uses: davidslusser/actions_python_ruff@v1.0.3
        with:
          # src: "."
          # options: "--cov=src"
          pip_install_command: "pip install -e .[dev]"
          python_version: "3.11"

  tests:
    name: CI py${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"  # not 3.10 which truncates to 3.1
          - "3.11"  # 2022-Q4
          - "3.12"  # 2023-Q4
      max-parallel: 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Create Python ${{ matrix.python-version }} environment
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-downloads: true
          environment-file: .github/env-ci.yml
          environment-name: anaconda-test-env-py-${{ matrix.python-version }}
          condarc: |
            channel-priority: flexible
          init-shell: bash
          create-args: >-
            python=${{ matrix.python-version }}
          cache-environment: true
          cache-environment-key: env-key-${{ matrix.python-version }}

      - name: Diagnostics
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          conda info
          conda list
          conda config --show-sources
          conda config --show
          conda env list
          printenv | sort

      - name: Python Tests
        run: |
          coverage run --concurrency=thread --parallel-mode -m pytest -vvv .

      - name: Install for functional testing
        run: |
          set -vxeuo pipefail
          python3 -m pip install -e .

      - name: Command Tests
        run: |
          set -vxeuo pipefail
          create_release_notes --help
          update_copyright_date --help

      - name: Run tests with pytest & coverage
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          coverage run --concurrency=thread --parallel-mode -m pytest -vvv --exitfirst .
          coverage combine

      - name: Coverage Report
        shell: bash -l {0}
        run: |
          python -m coverage report --precision 3

      - name: Force Install coveralls by pip
        shell: bash -l {0}
        run: |
          python -m pip install --force-reinstall coveralls
  
      - name: Upload coverage data to coveralls.io
        shell: bash -l {0}
        run: |
          set -vxeuo pipefail
          python -m coveralls debug
          python -m coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true

  # https://coveralls-python.readthedocs.io/en/latest/usage/configuration.html#github-actions-support
  coveralls:
    name: Report unit test coverage to coveralls
    needs: tests
    runs-on: ubuntu-latest
    container: python:3-slim

    steps:
      - name: Gather coverage and report to Coveralls
        run: |
          set -vxeuo pipefail
          echo "Finally!"
          pip3 install --upgrade coveralls
          # debug mode: output prepared json and reported files list to stdout
          # https://coveralls-python.readthedocs.io/en/latest/troubleshooting.html
          coveralls debug
          coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
